---
import BaseLayout from "../layouts/BaseLayout.astro";

import ContactCTA from "../components/ContactCTA.astro";
import Hero from "../components/Hero.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

interface Props {
	entry: CollectionEntry<"about">;
}

// Fetch the about collection
const aboutEntries = await getCollection("about");

// Sort entries by id
const sortedEntries = aboutEntries.sort((a, b) => a.data.id - b.data.id);
const entriesContent = await Promise.all(
	sortedEntries.map(async (entry) => ({
		...entry,
		Content: (await entry.render()).Content,
	})),
);
---

<BaseLayout
	title="About | Evgeniia Ivchenko"
	description="About Evgeniia Ivchenko"
>
	<div class="stack gap-20">
		<main class="wrapper about">
			<Hero
				title="Обо мне"
				tagline="Спасибо, что зашли. Прочтите ниже, чтобы узнать больше обо мне и моем опыте."
			>
				<img src="/assets/about-2.jpg" alt="Evgeniia Ivchenko" />
			</Hero>

			<section>
				<div class="content">
					<p>
						Более 9 лет проектирую интерфейсы опираясь на
						потребности пользователей. Помогаю компаниям решать
						проблемы и достигать целей. Принимаю участие во всех
						этапах создания и развития продукта. Имею большой опыт
						работы проектирования Web приложений, iOS и Android
					</p>
				</div>
			</section>
			{
				entriesContent.map(({ data, Content }) => (
					<section>
						<h2 class="section-title">{data.article}</h2>
						<div class="content">
							<Content />
						</div>
					</section>
				))
			}
		</main>
		<ContactCTA />
	</div>
</BaseLayout>
<style>
	.about {
		display: flex;
		flex-direction: column;
		gap: 2rem;
	}

	img {
		margin-top: 1.5rem;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-md);
	}

	section {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		color: var(--gray-100);
	}

	.section-title {
		grid-column-start: 1;
		font-size: var(--text-xl);
		color: var(--gray-200);
	}

	.content {
		grid-column: 2 / 3;
	}
	.content > :global(* + *) {
		margin-top: 1rem;
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4) {
		margin: 1.5rem 0;
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.1;
		padding-inline-start: 1.5rem;
		border-inline-start: 0.25rem solid var(--accent-dark);
		color: var(--gray-0);
	}

	.back-link,
	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}

	.back-link:hover,
	.back-link:focus,
	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	@media (min-width: 50em) {
		.about {
			display: grid;
			grid-template-columns: 1fr 3fr 1fr;
		}

		.about > :global(:first-child) {
			grid-column-start: 2;
		}

		section {
			display: contents;
			font-size: var(--text-lg);
		}
		.content :global(blockquote) {
			font-size: var(--text-xl);
		}
	}
</style>
